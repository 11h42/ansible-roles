---
- name: Install the nginx packages
  apt: name={{ item }} state=present
  with_items:
    - nginx
  when: ansible_os_family == "Debian"
  tags: [packages,nginx]

- name: Find enabled sites
  shell: ls -1 {{nginx_conf_dir}}/sites-enabled
  register: enabled_sites
  changed_when: False
  tags: [configuration,nginx]

- name: Disable unmanaged sites
  file: path={{nginx_conf_dir}}/sites-enabled/{{ item }} state=absent
  with_items: enabled_sites.stdout_lines
  when: item[:-5] not in nginx_site_availables.keys()
  notify:
   - reload nginx
  tags: [configuration,nginx]

- name: Ensure log directory exist
  file: path={{ nginx_log_dir }} state=directory owner={{nginx_user}} group={{nginx_group}} mode=0755
  tags: [configuration,nginx]

- name: Disable the default site
  file: path={{nginx_conf_dir}}/sites-enabled/default state=absent
  notify:
    - reload nginx
  tags: [configuration,nginx]

- name: Copy the nginx configuration file
  template: src=nginx.conf.j2 dest={{nginx_conf_dir}}/nginx.conf
  notify:
   - restart nginx
  tags: [configuration,nginx]

- name: Create the configurations for sites
  template: src=site.conf.j2 dest={{nginx_conf_dir}}/sites-available/{{ item }}.conf
  with_items: nginx_site_availables.keys()
  notify:
   - restart nginx
  tags: [configuration,nginx]

- name: Create links for sites-enabled
  file: state=link src={{nginx_conf_dir}}/sites-available/{{ item }}.conf dest={{nginx_conf_dir}}/sites-enabled/{{ item }}.conf
  with_items: nginx_site_availables.keys()
  notify:
   - reload nginx
  tags: [configuration,nginx]

- name: Start the nginx service
  service: name=nginx state=started enabled=yes
  tags: [service,nginx]
